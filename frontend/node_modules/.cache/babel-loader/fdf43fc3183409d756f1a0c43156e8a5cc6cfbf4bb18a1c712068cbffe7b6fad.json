{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VELUTHAI\\\\Desktop\\\\SOCIETY FINANCE\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userType, setUserType] = useState(null);\n  const login = (email, password, type) => {\n    if (type === 'admin' && email === 'admin@redvalley.com' && password === 'admin123') {\n      setCurrentUser({\n        email,\n        name: 'Administrator'\n      });\n      setIsAuthenticated(true);\n      setUserType('admin');\n      return {\n        success: true\n      };\n    } else if (type === 'member') {\n      setCurrentUser({\n        email,\n        name: 'Member'\n      });\n      setIsAuthenticated(true);\n      setUserType('member');\n      return {\n        success: true\n      };\n    }\n    return {\n      success: false,\n      message: 'Invalid credentials'\n    };\n  };\n  const register = userData => {\n    setCurrentUser(userData);\n    setIsAuthenticated(true);\n    setUserType('member');\n    return {\n      success: true\n    };\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n    setUserType(null);\n  };\n  const value = {\n    currentUser,\n    isAuthenticated,\n    userType,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"sYAirH7wKkii9Zmy/vDNvdkId1o=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","userType","setUserType","login","email","password","type","name","success","message","register","userData","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/VELUTHAI/Desktop/SOCIETY FINANCE/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userType, setUserType] = useState(null);\r\n\r\n  const login = (email, password, type) => {\r\n    if (type === 'admin' && email === 'admin@redvalley.com' && password === 'admin123') {\r\n      setCurrentUser({ email, name: 'Administrator' });\r\n      setIsAuthenticated(true);\r\n      setUserType('admin');\r\n      return { success: true };\r\n    } else if (type === 'member') {\r\n      setCurrentUser({ email, name: 'Member' });\r\n      setIsAuthenticated(true);\r\n      setUserType('member');\r\n      return { success: true };\r\n    }\r\n    return { success: false, message: 'Invalid credentials' };\r\n  };\r\n\r\n  const register = (userData) => {\r\n    setCurrentUser(userData);\r\n    setIsAuthenticated(true);\r\n    setUserType('member');\r\n    return { success: true };\r\n  };\r\n\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    setIsAuthenticated(false);\r\n    setUserType(null);\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    isAuthenticated,\r\n    userType,\r\n    login,\r\n    register,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOL,UAAU,CAACG,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,OAAO;AAIpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMgB,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;IACvC,IAAIA,IAAI,KAAK,OAAO,IAAIF,KAAK,KAAK,qBAAqB,IAAIC,QAAQ,KAAK,UAAU,EAAE;MAClFP,cAAc,CAAC;QAAEM,KAAK;QAAEG,IAAI,EAAE;MAAgB,CAAC,CAAC;MAChDP,kBAAkB,CAAC,IAAI,CAAC;MACxBE,WAAW,CAAC,OAAO,CAAC;MACpB,OAAO;QAAEM,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,MAAM,IAAIF,IAAI,KAAK,QAAQ,EAAE;MAC5BR,cAAc,CAAC;QAAEM,KAAK;QAAEG,IAAI,EAAE;MAAS,CAAC,CAAC;MACzCP,kBAAkB,CAAC,IAAI,CAAC;MACxBE,WAAW,CAAC,QAAQ,CAAC;MACrB,OAAO;QAAEM,OAAO,EAAE;MAAK,CAAC;IAC1B;IACA,OAAO;MAAEA,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAsB,CAAC;EAC3D,CAAC;EAED,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;IAC7Bb,cAAc,CAACa,QAAQ,CAAC;IACxBX,kBAAkB,CAAC,IAAI,CAAC;IACxBE,WAAW,CAAC,QAAQ,CAAC;IACrB,OAAO;MAAEM,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBd,cAAc,CAAC,IAAI,CAAC;IACpBE,kBAAkB,CAAC,KAAK,CAAC;IACzBE,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMW,KAAK,GAAG;IACZhB,WAAW;IACXE,eAAe;IACfE,QAAQ;IACRE,KAAK;IACLO,QAAQ;IACRE;EACF,CAAC;EAED,oBACEtB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAlB,QAAA,EAChCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,GAAA,CA/CWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}