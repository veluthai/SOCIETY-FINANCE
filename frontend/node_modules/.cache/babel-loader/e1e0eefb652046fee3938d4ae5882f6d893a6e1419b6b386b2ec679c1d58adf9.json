{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VELUTHAI\\\\Desktop\\\\SOCIETY FINANCE\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userType, setUserType] = useState(null);\n  const login = (email, password, type) => {\n    console.log('Login attempt:', {\n      email,\n      password,\n      type\n    });\n    if (type === 'admin' && email === 'admin@redvalley.com' && password === 'admin123') {\n      const userData = {\n        email,\n        name: 'Administrator',\n        id: 1\n      };\n      setCurrentUser(userData);\n      setIsAuthenticated(true);\n      setUserType('admin');\n      localStorage.setItem('user', JSON.stringify({\n        ...userData,\n        userType: 'admin'\n      }));\n      console.log('Admin login successful');\n      return {\n        success: true\n      };\n    } else if (type === 'member' && email && password) {\n      const userData = {\n        email,\n        name: 'John Doe',\n        id: 2,\n        buildingNumber: 'B-12',\n        phoneNumber: '9876543210'\n      };\n      setCurrentUser(userData);\n      setIsAuthenticated(true);\n      setUserType('member');\n      localStorage.setItem('user', JSON.stringify({\n        ...userData,\n        userType: 'member'\n      }));\n      console.log('Member login successful');\n      return {\n        success: true\n      };\n    }\n    console.log('Login failed');\n    return {\n      success: false,\n      message: 'Invalid credentials'\n    };\n  };\n  const register = userData => {\n    console.log('Registration attempt:', userData);\n    const newUserData = {\n      ...userData,\n      id: Date.now(),\n      name: userData.name || 'John Doe'\n    };\n    setCurrentUser(newUserData);\n    setIsAuthenticated(true);\n    setUserType('member');\n    localStorage.setItem('user', JSON.stringify({\n      ...newUserData,\n      userType: 'member'\n    }));\n    console.log('Registration successful');\n    return {\n      success: true\n    };\n  };\n  const logout = () => {\n    console.log('Logging out');\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n    setUserType(null);\n    localStorage.removeItem('user');\n  };\n\n  // Initialize auth state from localStorage\n  React.useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setCurrentUser(userData);\n        setIsAuthenticated(true);\n        setUserType(userData.userType);\n        console.log('Restored user from localStorage:', userData);\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        localStorage.removeItem('user');\n      }\n    }\n  }, []);\n  const value = {\n    currentUser,\n    isAuthenticated,\n    userType,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"l2L7z+bHyV4Nb4j1LmRwMJJIL5g=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","userType","setUserType","login","email","password","type","console","log","userData","name","id","localStorage","setItem","JSON","stringify","success","buildingNumber","phoneNumber","message","register","newUserData","Date","now","logout","removeItem","useEffect","storedUser","getItem","parse","error","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/VELUTHAI/Desktop/SOCIETY FINANCE/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userType, setUserType] = useState(null);\r\n\r\n  const login = (email, password, type) => {\r\n    console.log('Login attempt:', { email, password, type });\r\n    \r\n    if (type === 'admin' && email === 'admin@redvalley.com' && password === 'admin123') {\r\n      const userData = { email, name: 'Administrator', id: 1 };\r\n      setCurrentUser(userData);\r\n      setIsAuthenticated(true);\r\n      setUserType('admin');\r\n      localStorage.setItem('user', JSON.stringify({ ...userData, userType: 'admin' }));\r\n      console.log('Admin login successful');\r\n      return { success: true };\r\n    } else if (type === 'member' && email && password) {\r\n      const userData = { \r\n        email, \r\n        name: 'John Doe', \r\n        id: 2,\r\n        buildingNumber: 'B-12',\r\n        phoneNumber: '9876543210'\r\n      };\r\n      setCurrentUser(userData);\r\n      setIsAuthenticated(true);\r\n      setUserType('member');\r\n      localStorage.setItem('user', JSON.stringify({ ...userData, userType: 'member' }));\r\n      console.log('Member login successful');\r\n      return { success: true };\r\n    }\r\n    console.log('Login failed');\r\n    return { success: false, message: 'Invalid credentials' };\r\n  };\r\n\r\n  const register = (userData) => {\r\n    console.log('Registration attempt:', userData);\r\n    const newUserData = { \r\n      ...userData, \r\n      id: Date.now(),\r\n      name: userData.name || 'John Doe'\r\n    };\r\n    setCurrentUser(newUserData);\r\n    setIsAuthenticated(true);\r\n    setUserType('member');\r\n    localStorage.setItem('user', JSON.stringify({ ...newUserData, userType: 'member' }));\r\n    console.log('Registration successful');\r\n    return { success: true };\r\n  };\r\n\r\n  const logout = () => {\r\n    console.log('Logging out');\r\n    setCurrentUser(null);\r\n    setIsAuthenticated(false);\r\n    setUserType(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  // Initialize auth state from localStorage\r\n  React.useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      try {\r\n        const userData = JSON.parse(storedUser);\r\n        setCurrentUser(userData);\r\n        setIsAuthenticated(true);\r\n        setUserType(userData.userType);\r\n        console.log('Restored user from localStorage:', userData);\r\n      } catch (error) {\r\n        console.error('Error parsing stored user data:', error);\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    isAuthenticated,\r\n    userType,\r\n    login,\r\n    register,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}