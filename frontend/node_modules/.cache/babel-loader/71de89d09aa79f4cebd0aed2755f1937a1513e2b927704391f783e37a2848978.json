{"ast":null,"code":"import { api } from './api';\nexport const complaintService = {\n  getComplaints: async () => {\n    try {\n      const response = await api.getComplaints();\n      return response;\n    } catch (error) {\n      console.error('Error fetching complaints:', error);\n      return {\n        success: false,\n        message: 'Failed to fetch complaints'\n      };\n    }\n  },\n  addComplaint: async complaintData => {\n    // This would be an actual API call in a real application\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve({\n          success: true,\n          data: {\n            id: Date.now(),\n            ...complaintData\n          }\n        });\n      }, 1000);\n    });\n  },\n  updateComplaint: async (id, status) => {\n    // This would be an actual API call in a real application\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve({\n          success: true,\n          data: {\n            id,\n            status\n          }\n        });\n      }, 1000);\n    });\n  }\n};","map":{"version":3,"names":["api","complaintService","getComplaints","response","error","console","success","message","addComplaint","complaintData","Promise","resolve","setTimeout","data","id","Date","now","updateComplaint","status"],"sources":["C:/Users/VELUTHAI/Desktop/SOCIETY FINANCE/frontend/src/services/complaintService.js"],"sourcesContent":["import { api } from './api';\r\n\r\nexport const complaintService = {\r\n  getComplaints: async () => {\r\n    try {\r\n      const response = await api.getComplaints();\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error fetching complaints:', error);\r\n      return { success: false, message: 'Failed to fetch complaints' };\r\n    }\r\n  },\r\n  \r\n  addComplaint: async (complaintData) => {\r\n    // This would be an actual API call in a real application\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({ success: true, data: { id: Date.now(), ...complaintData } });\r\n      }, 1000);\r\n    });\r\n  },\r\n  \r\n  updateComplaint: async (id, status) => {\r\n    // This would be an actual API call in a real application\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({ success: true, data: { id, status } });\r\n      }, 1000);\r\n    });\r\n  }\r\n};"],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAO;AAE3B,OAAO,MAAMC,gBAAgB,GAAG;EAC9BC,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACE,aAAa,CAAC,CAAC;MAC1C,OAAOC,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO;QAAEE,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAA6B,CAAC;IAClE;EACF,CAAC;EAEDC,YAAY,EAAE,MAAOC,aAAa,IAAK;IACrC;IACA,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9BC,UAAU,CAAC,MAAM;QACfD,OAAO,CAAC;UAAEL,OAAO,EAAE,IAAI;UAAEO,IAAI,EAAE;YAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;YAAE,GAAGP;UAAc;QAAE,CAAC,CAAC;MACxE,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ,CAAC;EAEDQ,eAAe,EAAE,MAAAA,CAAOH,EAAE,EAAEI,MAAM,KAAK;IACrC;IACA,OAAO,IAAIR,OAAO,CAAEC,OAAO,IAAK;MAC9BC,UAAU,CAAC,MAAM;QACfD,OAAO,CAAC;UAAEL,OAAO,EAAE,IAAI;UAAEO,IAAI,EAAE;YAAEC,EAAE;YAAEI;UAAO;QAAE,CAAC,CAAC;MAClD,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}